import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import os

##For all tests
names = ['Weight', 'Iter', 'Animal', 'ID', 'TP', 'FP', 'FN', 'ACC']
o_names = ['Weight', 'Iter', 'Precision', 'Recall', 'F1', 'TP', 'FP', 'FN', 'IoU', 'mAP']

#Function to format the data for the barplot 
def barformat(test):
    values = test.loc[41,['Precision','Recall','F1']]
    mAP = (test.loc[41,'mAP'])/100
    values.loc['mAP'] = mAP
    return(values)

#Read in the data 
os.chdir("/home/sm/astroeco_ml/data_test/knowsley_eval_results/eval_results_test_3")
test_K3 = pd.read_csv('overall_test.txt', names = o_names, sep = " ")

os.chdir("/home/sm/astroeco_ml/data_test/knowsley_eval_results/eval_results_test_5")
test_K5 = pd.read_csv('overall_test.txt', names = o_names, sep = " ")

##---Make the plot---# 

labels = ['Precision', 'Recall', 'F1 Score', 'mAP']
Test_3 = barformat(test_K3)
Test_5 = barformat(test_K5)

##positions of bars
x = np.arange(len(labels)) #position of labels
width = 0.35 #width of bars  

fig, ax = plt.subplots()
test3 = ax.bar(x - width/2, Test_3, width, label='Dim 416')
test5 = ax.bar(x + width/2, Test_5, width, label='Dim 608')
ax.set_ylabel('Scores')
ax.set_title('Performance of Knowsley Tests')
ax.set_xlabel('Results from last Iteration', labelpad = 10)
ax.set_xticks(x)
ax.set_xticklabels(labels)
ax.set_ylim([0,0.8])
ax.legend()

def autolabel(rects): #borrowed from: https://matplotlib.org/3.1.1/gallery/lines_bars_and_markers/barchart.html
    """Attach a text label above each bar in *rects*, displaying its height."""
    for rect in rects:
        height = rect.get_height()
        ax.annotate('{}'.format(height),
                    xy=(rect.get_x() + rect.get_width() / 2, height),
                    xytext=(0, 3),  # 3 points vertical offset
                    textcoords="offset points",
                    ha='center', va='bottom', fontsize = 'small')
        
autolabel(test3)
autolabel(test5)
fig.tight_layout()
plt.show()
